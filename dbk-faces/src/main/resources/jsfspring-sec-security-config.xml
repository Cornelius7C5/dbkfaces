<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    <http
        auto-config="true"
        use-expressions="true">
        <intercept-url
            pattern="/pages/secure/**"
            access="hasAnyRole('ROLE_USER','ROLE_ADMINISTRATOR','ROLE_UCZESTNIK','ROLE_SPRZEDAWCA')" />
        <intercept-url
            pattern="/pages/unsecure/**"
            access="permitAll" />
        <intercept-url
            pattern="/**"
            access="permitAll" />
    </http>
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <jdbc-user-service
                data-source-ref="dataSource"
                users-by-username-query="SELECT id_u AS &quot;username&quot;, &quot;password&quot;,TRUE FROM users WHERE id_u::text=?"
                authorities-by-username-query="SELECT users.id_u::text AS username, 'ROLE_' || upper(replace(roles.name, ' ', '_')) AS &quot;authority&quot; FROM users, roles WHERE users.id_role=roles.id_r AND users.id_u::text=?" />
        </authentication-provider>
    </authentication-manager>
</beans:beans>